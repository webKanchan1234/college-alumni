name: Deploy MERN App

on:
  push:
    branches:
      - main # or your default branch

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14' # or your Node.js version

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies for backend
        working-directory: ./backend
        run: npm install

      - name: Install dependencies for frontend
        working-directory: ./frontend
        run: npm install

      - name: Update Browserslist database
        working-directory: ./frontend
        run: npx update-browserslist-db@latest --update-db

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: Deploy to AWS EC2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }} # If you use a private key for SSH
        run: |
          echo "Deploying to AWS EC2..."
          echo "$PRIVATE_KEY" > key.pem
          chmod 600 key.pem
          
          # Deploy backend
          scp -i key.pem -r ./backend/* $EC2_USER@$EC2_HOST:/home/$EC2_USER/backend
          
          # Deploy frontend
          scp -i key.pem -r ./frontend/build/* $EC2_USER@$EC2_HOST:/home/$EC2_USER/frontend/build
          
          ssh -i key.pem $EC2_USER@$EC2_HOST << 'EOF'
            # Navigate to backend directory and install dependencies
            cd /home/$EC2_USER/backend
            npm install
            pm2 restart all
            
            # Navigate to frontend directory
            cd /home/$EC2_USER/frontend
            # If using a web server like nginx to serve the frontend, restart it
            # e.g., sudo systemctl restart nginx
          EOF
